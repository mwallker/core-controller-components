{"version":3,"file":"bundle.js","sources":["../src/App.svelte","../src/index.ts"],"sourcesContent":["<style>\n\tinput {\n\t  width: 5em;\n\t}\n</style>\n\n<script lang=\"ts\">\n\tlet c: number = 0;\n\tlet f: number = 32;\n\tlet fahrenheit: number = 0;\n\tlet celcius: number = 0;\n\t$: fahrenheit = parseInt((32 + (9 / 5) * c).toFixed(1), 10);\n\t$: celcius = parseInt(((5 / 9) * (f - 32)).toFixed(1), 10);\n\n\t// this should work! Right?\n\tfunction setBothFromC(value: number) {\n\t  c = +value;\n\t}\n\n\tfunction setBothFromF(value: number) {\n\t  f = +value;\n\t  // c = +((5 / 9) * (f - 32)).toFixed(1);\n\t}\n\n\tconst generateRandomNumber = (): string => {\n\t  let text: string = \"\";\n\n\t  let possible: string = \"0123456789\";\n\t  let i: number = 0;\n\n\t  for (i = 0; i < 4; i++) {\n\t    text += possible.charAt(Math.floor(Math.random() * possible.length));\n\t    console.log(text);\n\t  }\n\t  return text;\n\t};\n</script>\n\n<div>C: {celcius}</div>\n<div>F: {fahrenheit}</div>\n<input value={celcius} on:input=\"{e => setBothFromC(e.target.value)}\" type=number> °c =\n<input value={fahrenheit} on:input=\"{e => setBothFromF(e.target.value)}\" type=number> °f","import Svelte from \"./App.svelte\";\n\nnew Svelte({\n  target: document.body\n});\n"],"names":["Svelte"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KACI,CAAC,GAAG,CAAC;KACL,CAAC,GAAG,EAAE;KACN,UAAU,GAAG,CAAC;KACd,OAAO,GAAG,CAAC;;UAIN,YAAY,CAAC,KAAK;oBACvB,CAAC,IAAI,KAAK;;;UAEL,YAAY,CAAC,KAAK;oBACvB,CAAC,IAAI,KAAK;;;uBAuBoB,CAAC,IAAI,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK;yBAC7B,CAAC,IAAI,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK;;;;;;;;;;;;;;;GA/BrE,4BAAG,UAAU,GAAG,QAAQ,EAAE,EAAE,GAAI,CAAC,GAAG,CAAC,GAAI,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,EAAE;;;;GAC1D,yBAAG,OAAO,GAAG,QAAQ,EAAG,CAAC,GAAG,CAAC,IAAK,CAAC,GAAG,EAAE,GAAG,OAAO,CAAC,CAAC,GAAG,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJzD,IAAIA,GAAM,CAAC;IACT,MAAM,EAAE,QAAQ,CAAC,IAAI;CACtB,CAAC,CAAC"}